{"architecture_hexgagonal":{"headline":"Hexagonal architecture","path":"solutions/architecture_hexgagonal","image":"./solutions/architecture_hexgagonal/_previewImage.png","snippet":"\nThis article explains so-called Hexagonal Architecture which is one of architectural styles applicable for wide variety of applications / software.\n"},"cloud_storage_overview":{"headline":"Cloud Storage","path":"solutions/cloud_storage_overview","image":"","snippet":"\nThis article mainly focuses on below topics:\n- What is Cloud Storage?\n- How does it works?\n- Benefits of Cloud Storage\n- Cloud Storage requirement\n- Types of Cloud Storage\n- Product and services offered by different vendors\n"},"communication":{"headline":"Communication among services","path":"solutions/communication","image":"./solutions/communication/_previewImage.png","snippet":"\nCommunication is a very important aspect while building IT application, especially large and complex one or one with microservices architecture. Based on your analysis of your problems, considering the following basic questions to start with:\n"},"endusermgmt_azure_aad":{"headline":"Credits","path":"solutions/endusermgmt_azure_aad","image":"./solutions/endusermgmt_azure_aad/_previewImage.png","snippet":"\nThe central control instance for all users within Azure is Azure Active Directory (AAD). It comes with the following features/ services that can be sued for enduser management:\n"},"endusermgmt_platforms":{"headline":"Credits","path":"solutions/endusermgmt_platforms","image":"./solutions/endusermgmt_platforms/_previewImage.png","snippet":"\nThis chapter lists major features/ concrete services for enduser management of the Azure platform. This architecture pattern builds on the general problem description for enduser management. A detailed discussion of services is part of the solution design in the subsequent chapters. Major features for the previously described areas are as follows:\n"},"endusermgmt_problem":{"headline":"Enduser management","path":"solutions/endusermgmt_problem","image":"./solutions/endusermgmt_problem/_previewImage.png","snippet":"\nThis document describes patterns to manage the endusers of applications including authentication and authorization. Applications are assumed to be web applications. From a data modeling perspective the major entities are the application and its endusers.\n"},"microsvc_platforms":{"headline":"Credits","path":"solutions/microsvc_platforms","image":"./solutions/microsvc_platforms/_previewImage.png","snippet":"\nThis chapter lists major features/ concrete services for microservices platforms within Azure. A detailed discussion of services is part of the solution design based on a certain service.\n"},"microsvc_platforms_azure_aks":{"headline":"Credits","path":"solutions/microsvc_platforms_azure_aks","image":"./solutions/microsvc_platforms_azure_aks/_previewImage.png","snippet":"\nThe solution is to use Azure Kubernetes Service and the following platform features regarding. The focus of this chapter is to introduce the relevant features. Recommendations for a concrete setup are given in the next chapter.\nThe platform features that (can) complement Kubernetes are:\n"},"microsvc_platforms_problem":{"headline":"Microservice Platforms Introduction","path":"solutions/microsvc_platforms_problem","image":"./solutions/microsvc_platforms_problem/_previewImage.png","snippet":"\nMicroservice orchestration is the automatic process of managing or scheduling the work of individual microservices of an application within a cluster. The platform provides an automated process of managing, scaling, and maintaining microservices of an application.\nThe container orchestration platform Kubernetes is the current de facto standard (Docker swarm and others are nowadays neglectable compared to Kubernetes). Containers are units that packages up code and all its dependencies like libr ..."},"monitoring_aws_cloudwatchCustomAlarm":{"headline":"Customise your cloudwatch alerts","path":"solutions/monitoring_aws_cloudwatchCustomAlarm","image":"","snippet":"\nCloudwatch alarms give you the ability to notify you in case an alarm is triggered. The standard message layout of cloudwatch is very inflexible and not customisable. With this approach it is possible to fill HTML templates with further information, links and buttons to find the solution ASAP.\n"},"monitoring_azure_native":{"headline":"Credits","path":"solutions/monitoring_azure_native","image":"./solutions/monitoring_azure_native/_previewImage.png","snippet":"\nThe solution is to use Azure Monitor with App Insights, Log Analytics and the following platform features regarding the monitored resources. The focus of this chapter is to introduce the relevant features. Recommendations for a concrete setup are given in the next chapter.\n"},"monitoring_openTelemetry":{"headline":"Monitoring your microservices with openTelemetry","path":"solutions/monitoring_openTelemetry","image":"./solutions/monitoring_openTelemetry/_previewImage.png","snippet":"\nWith the complexity and size of microservice systems, which include hundreds of small services, keeping an overview can be quite challenging. Usually one monolitic application can be scanned for potential errors, as failures in the system directly reference this one application. With microservices the area to search in could be narrowed down, but never to an extend adressing one specific service being the root cause. Therefore, to keep track of runtime problems and the fullfillment of nonfunct ..."},"monitoring_platforms":{"headline":"Credits","path":"solutions/monitoring_platforms","image":"./solutions/monitoring_platforms/_previewImage.png","snippet":"\nThis chapter lists major features/ concrete services for monitoring of the Azure platform. This architecture pattern builds on the general problem description for monitoring. A detailed discussion of services is part of the solution design in the subsequent chapters. Major features per stage of the monitoring pipeline are as follows:\n"},"monitoring_problem":{"headline":"Monitoring","path":"solutions/monitoring_problem","image":"./solutions/monitoring_problem/_previewImage.png","snippet":"\nUsed definition: A monitoring solution helps the monitoring consumer achieve the satisfactory level of control of a defined service. (Link to source)\n"},"provisioning_azure_azuredevops":{"headline":"Credits","path":"solutions/provisioning_azure_azuredevops","image":"./solutions/provisioning_azure_azuredevops/_previewImage.png","snippet":"\nThe cloud native provisioning service in Azure is Azure DevOps formerly known as Team Foundation Server (TFS). Azure DevOps covers the full CI/ CD requiremenzs including project management. Due to its extensive extension features you can also replace features with other alternatives (see also under variations).\n"},"provisioning_azure_github":{"headline":"Credits","path":"solutions/provisioning_azure_github","image":"./solutions/provisioning_azure_github/_previewImage.png","snippet":"\nGitHub was recently acquired by Microsoft. Microsoft announced that new features will be first incorporated into GitHub instead of Azure DevOps. This announcements shows the future strategic shift from Microsoft away from Azure DevOps to GitHub. The subset of features for implementing pipelines is called GitHub Actions. A pipeline is also called a workflow. So far GitHub Actions are limited to repositories within GitHub.\n"},"provisioning_platforms":{"headline":"Credits","path":"solutions/provisioning_platforms","image":"./solutions/provisioning_platforms/_previewImage.png","snippet":"\nAzure provides the following structural elements to model an environment:\n"},"provisioning_problem":{"headline":"Provisioning","path":"solutions/provisioning_problem","image":"./solutions/provisioning_problem/_previewImage.png","snippet":"\nThis document describes patterns to automate the deployment of an application to a target environment. The major players in this documentation are (1) the process as a whole (aka provisioning), (2) automation code and (3) application/ infra code to be deployed. Additionally a third aspect is cross functionalities (3) that affect the automation and the application/infra code such as compliance.\n"},"security_authentication":{"headline":"Authentication","path":"solutions/security_authentication","image":"./solutions/security_authentication/_previewImage.png","snippet":"\nAccess control is an important aspect for the security in IT application landscapes. There are two different aspects to distinguish:\n"},"security_authorization":{"headline":"Authorization","path":"solutions/security_authorization","image":"./solutions/security_authorization/_previewImage.png","snippet":"\nAccess control is an important aspect for the security in IT application landscapes. There are two different aspects to distinguish: authentication and authorization.\n"}}