{"coolArchitecture":{"headline":"Cool Architecture","path":"solutions/coolArchitecture","image":"./solutions/coolArchitecture/firstImage.png","snippet":"\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ..."},"coolArchitecture2":{"headline":"Cool Architecture 2","path":"solutions/coolArchitecture2","image":"./solutions/coolArchitecture2/firstImage.png","snippet":"\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ..."},"openTelemetry":{"headline":"Monitoring your microservices with openTelemetry","path":"solutions/openTelemetry","image":"./solutions/openTelemetry/openTelemetry_architecture.svg","snippet":"\nWith the complexity and size of microservice systems, which include hundreds of small services, keeping an overview can be quite challenging. Usually one monolitic application can be scanned for potential errors as failures in the system directly reference this one application. With microservices the area to search in could be narrowed down but never to an extend adressing one specific service being the root cause. Therefore to keep track of runtime problems and the fullfillment of nonfunction ..."}}