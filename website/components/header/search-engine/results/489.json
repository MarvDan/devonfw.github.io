{"type":"doc","filename":"guide-routing.asciidoc.html","anchor":"guide-routing.asciidoc_defining-routes","title":"Defining Routes","breadcrumbs":["Angular","Angular","Routing"],"text":"Defining Routes\n\nFor each feature module and the app module all routes should be defined in a seperate module with the suffix RoutingModule.\nThis way the routing modules are the only place where routes are defined.\nThis pattern achieves a clear seperation of concernes.\nThe following figure illustrates this.\n\n\n\n\n\nFigure 46. Routing module declaration\n\n\nIt is important to define routes inside app routing module with .forRoot() and in feature routing modules with .forChild().\n\n\nExample 1 - No Lazy Loading\n\nIn this example two modules need to be configured with routes - AppModule and FlightModule.\n\n\nThe following routes will be configured\n\n\n\n\n/ will redirect to /search\n\n\n/search displays FlightSearchComponent (FlightModule)\n\n\n/search/print/:flightId/:date displays FlightPrintComponent (FlightModule)\n\n\n/search/details/:flightId/:date displays FlightDetailsComponent (FlightModule)\n\n\nAll other routes will display ErrorPage404 (AppModule)\n\n\n\n\nListing 64. app-routing.module.ts\n\n\n\n\n\nListing 65. flight-search-routing.module.ts\n\n\n\n\n\n\n\n\nTip\n\n\nThe import order inside AppModule is important.\nAppRoutingModule needs to be imported after FlightModule.\n\n\n\n\n\n\nExample 2 - Lazy Loading\n\nLazy Loading is a good practice when the application has multiple feature areas and a user might not visit every dialog.\nOr at least he might not need every dialog up front.\n\n\nThe following example will configure the same routes as example 1 but will lazy load FlightModule.\n\n\nListing 66. app-routing.module.ts\n\n\n\n\n\nListing 67. flight-search-routing.module.ts\n\n\n\n\n\n\n\n"}